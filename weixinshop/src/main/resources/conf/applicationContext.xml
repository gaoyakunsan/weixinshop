<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:properties/jdbc.properties" />
	<!-- 自动扫描注解 -->
	<!-- <context:component-scan base-package="controller" />
	<context:component-scan base-package="service.impl" /> -->
	<!-- 异常处理配置 -->
	<!-- <bean id="exceptionHandler" class="com.geloin.spring.exceptionhandler.MyExceptionHandler"/> -->

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--mapper配置 单个配置 ，MapperScannerConfigurer扫描器多个配置使用 -->
	<!-- <bean id="userMapperCustom" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.geloin.spring.mapper.UserMapperCustom" 
		/> <property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="dataSource" ref="dataSource" />
		<!-- Mybatis自动生成器配置 -->
		<property name="configLocation" value="classpath:conf/mybatis-MapConfig.xml" />
		<!-- sessionFactory -->

		<!-- <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property> -->

	</bean>

	<!-- 可通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<!-- 指定扫描的包名 如果扫描多个包，每个包中间使用半角逗号分隔 -->
	<!-- 自动扫描出来的mapper的bean的id为mapper类名（首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="Mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>  